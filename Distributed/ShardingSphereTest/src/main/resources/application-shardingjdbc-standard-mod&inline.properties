# 这里的算法，分库使用的standard策略+MOD算法   分表使用的standard策略+INLINE算法

# 应用配置
spring.application.name=demo
server.port=9005
# 打印SQL
spring.shardingsphere.props.sql-show = true
spring.main.allow-bean-definition-overriding = true

# ----------------数据源配置
# 指定对应的真实库
spring.shardingsphere.datasource.names=test0,test1
# 配置真实库
spring.shardingsphere.datasource.test0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.test0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.test0.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC
spring.shardingsphere.datasource.test0.username=root
spring.shardingsphere.datasource.test0.password=123456

spring.shardingsphere.datasource.test1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.test1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.test1.url=jdbc:mysql://localhost:3306/test2?serverTimezone=UTC
spring.shardingsphere.datasource.test1.username=root
spring.shardingsphere.datasource.test1.password=123456
#------------------------分布式序列算法配置
# 雪花算法，生成Long类型主键。
spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.props.worker.id=1
# 指定分布式主键生成策略
spring.shardingsphere.rules.sharding.tables.account.key-generate-strategy.column=aid
spring.shardingsphere.rules.sharding.tables.account.key-generate-strategy.key-generator-name=alg_snowflake
#-----------------------配置实际分片节点
spring.shardingsphere.rules.sharding.tables.account.actual-data-nodes=test$->{0..1}.account_$->{1..2}
#-----------------------配置分库策略，按aid取模
spring.shardingsphere.rules.sharding.tables.account.database-strategy.standard.sharding-column=aid
spring.shardingsphere.rules.sharding.tables.account.database-strategy.standard.sharding-algorithm-name=account_db_alg

spring.shardingsphere.rules.sharding.sharding-algorithms.account_db_alg.type=MOD
spring.shardingsphere.rules.sharding.sharding-algorithms.account_db_alg.props.sharding-count=2
#给account表指定分表策略  standard-按单一分片键进行精确或范围分片
spring.shardingsphere.rules.sharding.tables.account.table-strategy.standard.sharding-column=aid
spring.shardingsphere.rules.sharding.tables.account.table-strategy.standard.sharding-algorithm-name=account_tbl_alg
# 分表策略-INLINE：按单一分片键分表
spring.shardingsphere.rules.sharding.sharding-algorithms.account_tbl_alg.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.account_tbl_alg.props.algorithm-expression=account_$->{aid%2+1}